#
# Complete watchTowr Platform API Documentation
# The watchTowr Client API combining all watchTowr Platform APIs into a single comprehensive reference, including:       * Continuous Assurance API       * Adversary Sight API       * Intelligence API       * Platform API 
# Version: 1.0
# Contact: support@watchTowr.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'IPRangesApi' {
    Context 'Set-IpRangeToBusinessUnits' {
        It 'Test Set-IpRangeToBusinessUnits' {
            #$TestResult = Set-IpRangeToBusinessUnits -Id "TEST_VALUE" -AssetBusinessUnitIdsDTO "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-CustomPropertyIpRange' {
        It 'Test New-CustomPropertyIpRange' {
            #$TestResult = New-CustomPropertyIpRange -Id "TEST_VALUE" -CreateClientCustomPropertyDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-NoteIpRange' {
        It 'Test New-NoteIpRange' {
            #$TestResult = New-NoteIpRange -Id "TEST_VALUE" -CreateClientNoteDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteCustomPropertyIpRange' {
        It 'Test Invoke-DeleteCustomPropertyIpRange' {
            #$TestResult = Invoke-DeleteCustomPropertyIpRange -Id "TEST_VALUE" -CustomPropertyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteNoteIpRange' {
        It 'Test Invoke-DeleteNoteIpRange' {
            #$TestResult = Invoke-DeleteNoteIpRange -Id "TEST_VALUE" -NoteId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AssetIpRangeNotes' {
        It 'Test Get-AssetIpRangeNotes' {
            #$TestResult = Get-AssetIpRangeNotes -Id "TEST_VALUE" -Page "TEST_VALUE" -PageSize "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AssetIprangeDetails' {
        It 'Test Get-AssetIprangeDetails' {
            #$TestResult = Get-AssetIprangeDetails -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-CustomPropertiesIpRange' {
        It 'Test Get-CustomPropertiesIpRange' {
            #$TestResult = Get-CustomPropertiesIpRange -Id "TEST_VALUE" -Page "TEST_VALUE" -PageSize "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ListAssetIpranges' {
        It 'Test Get-ListAssetIpranges' {
            #$TestResult = Get-ListAssetIpranges -Page "TEST_VALUE" -PageSize "TEST_VALUE" -AssetName "TEST_VALUE" -Statuses "TEST_VALUE" -Source "TEST_VALUE" -BusinessUnitIds "TEST_VALUE" -CreatedFrom "TEST_VALUE" -CreatedTo "TEST_VALUE" -UpdatedFrom "TEST_VALUE" -UpdatedTo "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-UnassignIpRangeFromBusinessUnits' {
        It 'Test Invoke-UnassignIpRangeFromBusinessUnits' {
            #$TestResult = Invoke-UnassignIpRangeFromBusinessUnits -Id "TEST_VALUE" -BusinessUnitIds "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-AssetIpRangeStatus' {
        It 'Test Update-AssetIpRangeStatus' {
            #$TestResult = Update-AssetIpRangeStatus -Id "TEST_VALUE" -UpdateClientLegacyAssetStatusDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-CustomPropertyIpRange' {
        It 'Test Update-CustomPropertyIpRange' {
            #$TestResult = Update-CustomPropertyIpRange -Id "TEST_VALUE" -CustomPropertyId "TEST_VALUE" -UpdateClientCustomPropertyDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-NoteIpRange' {
        It 'Test Update-NoteIpRange' {
            #$TestResult = Update-NoteIpRange -Id "TEST_VALUE" -NoteId "TEST_VALUE" -CreateClientNoteDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
