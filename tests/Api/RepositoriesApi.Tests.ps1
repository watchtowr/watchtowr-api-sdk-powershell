#
# Complete watchTowr Platform API Documentation
# The watchTowr Client API combining all watchTowr Platform APIs into a single comprehensive reference, including:       * Automated Red Teaming API       * Adversary Sight API       * Intelligence API       * Platform API 
# Version: 1.0
# Contact: support@watchTowr.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'WatchtowrAPI' -name 'RepositoriesApi' {
    Context 'Set-RepositoryToBusinessUnits' {
        It 'Test Set-RepositoryToBusinessUnits' {
            #$TestResult = Set-RepositoryToBusinessUnits -Id "TEST_VALUE" -AssetBusinessUnitIdsDTO "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-CustomPropertyRepository' {
        It 'Test New-CustomPropertyRepository' {
            #$TestResult = New-CustomPropertyRepository -Id "TEST_VALUE" -CreateClientCustomPropertyDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-NoteRepository' {
        It 'Test New-NoteRepository' {
            #$TestResult = New-NoteRepository -Id "TEST_VALUE" -CreateClientNoteDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteCustomPropertyRepository' {
        It 'Test Invoke-DeleteCustomPropertyRepository' {
            #$TestResult = Invoke-DeleteCustomPropertyRepository -Id "TEST_VALUE" -CustomPropertyId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteNoteRepository' {
        It 'Test Invoke-DeleteNoteRepository' {
            #$TestResult = Invoke-DeleteNoteRepository -Id "TEST_VALUE" -NoteId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AssetRepositoryDetails' {
        It 'Test Get-AssetRepositoryDetails' {
            #$TestResult = Get-AssetRepositoryDetails -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AssetRepositoryNotes' {
        It 'Test Get-AssetRepositoryNotes' {
            #$TestResult = Get-AssetRepositoryNotes -Id "TEST_VALUE" -Page "TEST_VALUE" -PageSize "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-CustomPropertiesRepository' {
        It 'Test Get-CustomPropertiesRepository' {
            #$TestResult = Get-CustomPropertiesRepository -Id "TEST_VALUE" -Page "TEST_VALUE" -PageSize "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ListAssetRepositories' {
        It 'Test Get-ListAssetRepositories' {
            #$TestResult = Get-ListAssetRepositories -Page "TEST_VALUE" -PageSize "TEST_VALUE" -AssetName "TEST_VALUE" -Statuses "TEST_VALUE" -Source "TEST_VALUE" -IntegrationConnections "TEST_VALUE" -BusinessUnitIds "TEST_VALUE" -CreatedFrom "TEST_VALUE" -CreatedTo "TEST_VALUE" -UpdatedFrom "TEST_VALUE" -UpdatedTo "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-UnassignRepositoryFromBusinessUnits' {
        It 'Test Invoke-UnassignRepositoryFromBusinessUnits' {
            #$TestResult = Invoke-UnassignRepositoryFromBusinessUnits -Id "TEST_VALUE" -BusinessUnitIds "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-AssetRepositoryStatus' {
        It 'Test Update-AssetRepositoryStatus' {
            #$TestResult = Update-AssetRepositoryStatus -Id "TEST_VALUE" -UpdateClientNextGenAssetStatusDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-CustomPropertyRepository' {
        It 'Test Update-CustomPropertyRepository' {
            #$TestResult = Update-CustomPropertyRepository -Id "TEST_VALUE" -CustomPropertyId "TEST_VALUE" -UpdateClientCustomPropertyDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-NoteRepository' {
        It 'Test Update-NoteRepository' {
            #$TestResult = Update-NoteRepository -Id "TEST_VALUE" -NoteId "TEST_VALUE" -CreateClientNoteDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
