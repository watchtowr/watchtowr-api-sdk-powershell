#
# Complete watchTowr Platform API Documentation
# The watchTowr Client API combining all watchTowr Platform APIs into a single comprehensive reference, including:       * Continuous Assurance API       * Adversary Sight API       * Intelligence API       * Platform API 
# Version: 1.0
# Contact: support@watchTowr.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER RequiredActions
Top priority items requiring immediate attention
.PARAMETER HuntOverview
Hunt-related metrics and status
.PARAMETER AttackSurfaceResiliency
Long-term security resilience metrics
.PARAMETER OrganizationSummary
Overall organization metrics and summary
.OUTPUTS

SecurityPostureDashboardDto<PSCustomObject>
#>

function Initialize-SecurityPostureDashboardDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${RequiredActions},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${HuntOverview},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${AttackSurfaceResiliency},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${OrganizationSummary}
    )

    Process {
        'Creating PSCustomObject: WatchtowrAPI => SecurityPostureDashboardDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $RequiredActions) {
            throw "invalid value for 'RequiredActions', 'RequiredActions' cannot be null."
        }

        if ($null -eq $HuntOverview) {
            throw "invalid value for 'HuntOverview', 'HuntOverview' cannot be null."
        }

        if ($null -eq $AttackSurfaceResiliency) {
            throw "invalid value for 'AttackSurfaceResiliency', 'AttackSurfaceResiliency' cannot be null."
        }

        if ($null -eq $OrganizationSummary) {
            throw "invalid value for 'OrganizationSummary', 'OrganizationSummary' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "requiredActions" = ${RequiredActions}
            "huntOverview" = ${HuntOverview}
            "attackSurfaceResiliency" = ${AttackSurfaceResiliency}
            "organizationSummary" = ${OrganizationSummary}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SecurityPostureDashboardDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to SecurityPostureDashboardDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SecurityPostureDashboardDto<PSCustomObject>
#>
function ConvertFrom-JsonToSecurityPostureDashboardDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: WatchtowrAPI => SecurityPostureDashboardDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SecurityPostureDashboardDto
        $AllProperties = ("requiredActions", "huntOverview", "attackSurfaceResiliency", "organizationSummary")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'requiredActions' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "requiredActions"))) {
            throw "Error! JSON cannot be serialized due to the required property 'requiredActions' missing."
        } else {
            $RequiredActions = $JsonParameters.PSobject.Properties["requiredActions"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "huntOverview"))) {
            throw "Error! JSON cannot be serialized due to the required property 'huntOverview' missing."
        } else {
            $HuntOverview = $JsonParameters.PSobject.Properties["huntOverview"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "attackSurfaceResiliency"))) {
            throw "Error! JSON cannot be serialized due to the required property 'attackSurfaceResiliency' missing."
        } else {
            $AttackSurfaceResiliency = $JsonParameters.PSobject.Properties["attackSurfaceResiliency"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "organizationSummary"))) {
            throw "Error! JSON cannot be serialized due to the required property 'organizationSummary' missing."
        } else {
            $OrganizationSummary = $JsonParameters.PSobject.Properties["organizationSummary"].value
        }

        $PSO = [PSCustomObject]@{
            "requiredActions" = ${RequiredActions}
            "huntOverview" = ${HuntOverview}
            "attackSurfaceResiliency" = ${AttackSurfaceResiliency}
            "organizationSummary" = ${OrganizationSummary}
        }

        return $PSO
    }

}

