#
# Complete watchTowr Platform API Documentation
# The watchTowr Client API combining all watchTowr Platform APIs into a single comprehensive reference, including:       * Automated Red Teaming API       * Adversary Sight API       * Intelligence API       * Platform API 
# Version: 1.0
# Contact: support@watchTowr.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER TotalResolvedFindings
Total count of resolved findings
.PARAMETER OldCriticalHighFindings
Count of critical/high findings older than 30 days
.PARAMETER UnacknowledgedCriticalHighFindings
Count of unacknowledged critical/high findings
.OUTPUTS

FindingsSummaryDto<PSCustomObject>
#>

function Initialize-FindingsSummaryDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [Decimal]
        ${TotalResolvedFindings},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [Decimal]
        ${OldCriticalHighFindings},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [Decimal]
        ${UnacknowledgedCriticalHighFindings}
    )

    Process {
        'Creating PSCustomObject: WatchtowrAPI => FindingsSummaryDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $TotalResolvedFindings) {
            throw "invalid value for 'TotalResolvedFindings', 'TotalResolvedFindings' cannot be null."
        }

        if ($null -eq $OldCriticalHighFindings) {
            throw "invalid value for 'OldCriticalHighFindings', 'OldCriticalHighFindings' cannot be null."
        }

        if ($null -eq $UnacknowledgedCriticalHighFindings) {
            throw "invalid value for 'UnacknowledgedCriticalHighFindings', 'UnacknowledgedCriticalHighFindings' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "totalResolvedFindings" = ${TotalResolvedFindings}
            "oldCriticalHighFindings" = ${OldCriticalHighFindings}
            "unacknowledgedCriticalHighFindings" = ${UnacknowledgedCriticalHighFindings}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to FindingsSummaryDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to FindingsSummaryDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

FindingsSummaryDto<PSCustomObject>
#>
function ConvertFrom-JsonToFindingsSummaryDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: WatchtowrAPI => FindingsSummaryDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in FindingsSummaryDto
        $AllProperties = ("totalResolvedFindings", "oldCriticalHighFindings", "unacknowledgedCriticalHighFindings")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'totalResolvedFindings' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalResolvedFindings"))) {
            throw "Error! JSON cannot be serialized due to the required property 'totalResolvedFindings' missing."
        } else {
            $TotalResolvedFindings = $JsonParameters.PSobject.Properties["totalResolvedFindings"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "oldCriticalHighFindings"))) {
            throw "Error! JSON cannot be serialized due to the required property 'oldCriticalHighFindings' missing."
        } else {
            $OldCriticalHighFindings = $JsonParameters.PSobject.Properties["oldCriticalHighFindings"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "unacknowledgedCriticalHighFindings"))) {
            throw "Error! JSON cannot be serialized due to the required property 'unacknowledgedCriticalHighFindings' missing."
        } else {
            $UnacknowledgedCriticalHighFindings = $JsonParameters.PSobject.Properties["unacknowledgedCriticalHighFindings"].value
        }

        $PSO = [PSCustomObject]@{
            "totalResolvedFindings" = ${TotalResolvedFindings}
            "oldCriticalHighFindings" = ${OldCriticalHighFindings}
            "unacknowledgedCriticalHighFindings" = ${UnacknowledgedCriticalHighFindings}
        }

        return $PSO
    }

}

