#
# Complete watchTowr Platform API Documentation
# The watchTowr Client API combining all watchTowr Platform APIs into a single comprehensive reference, including:       * Automated Red Teaming API       * Adversary Sight API       * Intelligence API       * Platform API 
# Version: 1.0
# Contact: support@watchTowr.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER TotalHuntsExecuted
Total number of rapid reaction hunts executed
.PARAMETER TotalUnresolvedHunts
Total number of unresolved hunts
.PARAMETER LatestExecutedHunts
Array of latest executed hunts
.OUTPUTS

HuntOverviewDto<PSCustomObject>
#>

function Initialize-HuntOverviewDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [Decimal]
        ${TotalHuntsExecuted},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [Decimal]
        ${TotalUnresolvedHunts},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${LatestExecutedHunts}
    )

    Process {
        'Creating PSCustomObject: WatchtowrAPI => HuntOverviewDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $TotalHuntsExecuted) {
            throw "invalid value for 'TotalHuntsExecuted', 'TotalHuntsExecuted' cannot be null."
        }

        if ($null -eq $TotalUnresolvedHunts) {
            throw "invalid value for 'TotalUnresolvedHunts', 'TotalUnresolvedHunts' cannot be null."
        }

        if ($null -eq $LatestExecutedHunts) {
            throw "invalid value for 'LatestExecutedHunts', 'LatestExecutedHunts' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "totalHuntsExecuted" = ${TotalHuntsExecuted}
            "totalUnresolvedHunts" = ${TotalUnresolvedHunts}
            "latestExecutedHunts" = ${LatestExecutedHunts}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to HuntOverviewDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to HuntOverviewDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

HuntOverviewDto<PSCustomObject>
#>
function ConvertFrom-JsonToHuntOverviewDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: WatchtowrAPI => HuntOverviewDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in HuntOverviewDto
        $AllProperties = ("totalHuntsExecuted", "totalUnresolvedHunts", "latestExecutedHunts")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'totalHuntsExecuted' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalHuntsExecuted"))) {
            throw "Error! JSON cannot be serialized due to the required property 'totalHuntsExecuted' missing."
        } else {
            $TotalHuntsExecuted = $JsonParameters.PSobject.Properties["totalHuntsExecuted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalUnresolvedHunts"))) {
            throw "Error! JSON cannot be serialized due to the required property 'totalUnresolvedHunts' missing."
        } else {
            $TotalUnresolvedHunts = $JsonParameters.PSobject.Properties["totalUnresolvedHunts"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "latestExecutedHunts"))) {
            throw "Error! JSON cannot be serialized due to the required property 'latestExecutedHunts' missing."
        } else {
            $LatestExecutedHunts = $JsonParameters.PSobject.Properties["latestExecutedHunts"].value
        }

        $PSO = [PSCustomObject]@{
            "totalHuntsExecuted" = ${TotalHuntsExecuted}
            "totalUnresolvedHunts" = ${TotalUnresolvedHunts}
            "latestExecutedHunts" = ${LatestExecutedHunts}
        }

        return $PSO
    }

}

