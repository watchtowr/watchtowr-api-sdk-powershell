#
# Complete watchTowr Platform API Documentation
# The watchTowr Client API combining all watchTowr Platform APIs into a single comprehensive reference, including:       * Automated Red Teaming API       * Adversary Sight API       * Intelligence API       * Platform API 
# Version: 1.0
# Contact: support@watchTowr.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Status
Target status to update.
.PARAMETER StatusReason
Reason for updating status.
.OUTPUTS

UpdateClientLegacyAssetStatusDto<PSCustomObject>
#>

function Initialize-UpdateClientLegacyAssetStatusDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("verified", "VerifiedOutOfScope", "VerifiedReducedAttack", "Incorrect Identification")]
        [String]
        ${Status},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StatusReason}
    )

    Process {
        'Creating PSCustomObject: WatchtowrAPI => UpdateClientLegacyAssetStatusDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Status) {
            throw "invalid value for 'Status', 'Status' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "status" = ${Status}
            "status_reason" = ${StatusReason}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to UpdateClientLegacyAssetStatusDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to UpdateClientLegacyAssetStatusDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

UpdateClientLegacyAssetStatusDto<PSCustomObject>
#>
function ConvertFrom-JsonToUpdateClientLegacyAssetStatusDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: WatchtowrAPI => UpdateClientLegacyAssetStatusDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in UpdateClientLegacyAssetStatusDto
        $AllProperties = ("status", "status_reason")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'status' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) {
            throw "Error! JSON cannot be serialized due to the required property 'status' missing."
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status_reason"))) { #optional property not found
            $StatusReason = $null
        } else {
            $StatusReason = $JsonParameters.PSobject.Properties["status_reason"].value
        }

        $PSO = [PSCustomObject]@{
            "status" = ${Status}
            "status_reason" = ${StatusReason}
        }

        return $PSO
    }

}

