#
# Complete watchTowr Platform API Documentation
# The watchTowr Client API combining all watchTowr Platform APIs into a single comprehensive reference, including:       * Continuous Assurance API       * Adversary Sight API       * Intelligence API       * Platform API 
# Version: 1.0
# Contact: support@watchTowr.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER CDN
No description available.
.PARAMETER Cloud
No description available.
.PARAMETER WAF
No description available.
.OUTPUTS

Infrastructure<PSCustomObject>
#>

function Initialize-Infrastructure {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CDN},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Cloud},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WAF}
    )

    Process {
        'Creating PSCustomObject: WatchtowrAPI => Infrastructure' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "CDN" = ${CDN}
            "Cloud" = ${Cloud}
            "WAF" = ${WAF}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Infrastructure<PSCustomObject>

.DESCRIPTION

Convert from JSON to Infrastructure<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Infrastructure<PSCustomObject>
#>
function ConvertFrom-JsonToInfrastructure {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: WatchtowrAPI => Infrastructure' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in Infrastructure
        $AllProperties = ("CDN", "Cloud", "WAF")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "CDN"))) { #optional property not found
            $CDN = $null
        } else {
            $CDN = $JsonParameters.PSobject.Properties["CDN"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Cloud"))) { #optional property not found
            $Cloud = $null
        } else {
            $Cloud = $JsonParameters.PSobject.Properties["Cloud"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "WAF"))) { #optional property not found
            $WAF = $null
        } else {
            $WAF = $JsonParameters.PSobject.Properties["WAF"].value
        }

        $PSO = [PSCustomObject]@{
            "CDN" = ${CDN}
            "Cloud" = ${Cloud}
            "WAF" = ${WAF}
        }

        return $PSO
    }

}

